[versions]
desugar_jdk_libs = "2.0.4"
coreKtx = "1.13.1"
appcompat = "1.7.0"
coreSplashscreen = "1.0.1"
kotlinxSerializationJson = "1.7.1"
kotlinxDatetime = "0.6.0"
compose-bom = "2024.06.00"
activityCompose = "1.9.1"
constraintlayoutCompose = "1.0.1"
navigationCompose = "2.8.0-beta07"
hiltNavigationCompose = "1.2.0"
hilt = "2.52"
androidLifecycle = "2.8.4"
coroutines = "1.8.1"
ktor = "2.3.12"
room = "2.6.1"
datastorePreferences = "1.1.1"
firebase-bom = "33.1.2"
inAppBrowser = "1.8.0"
timber = "5.0.1"
lottieCompose = "6.5.0"
coil-bom = "2.7.0"
playReview = "2.0.1"
playAppUpdate = "2.1.0"
truth = "1.4.4"
junit = "4.13.2"
archCoreTesting = "2.2.0"
testCore = "1.6.1"
testExtJunit = "1.2.1"
testRunner = "1.6.1"
testRules = "1.6.1"
espresso = "3.6.1"

# Plugins
agp = "8.6.0"
kotlin = "2.0.0"
ksp = "2.0.0-1.0.22"
googleServices = "4.4.2"
firebaseCrashlytics = "3.0.2"
firebasePerf = "1.4.2"

[libraries]
# Java 8+ API Desugaring Support
desugar_jdk_libs = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar_jdk_libs" }

core-ktx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreen" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }

# Jetpack Compose
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "compose-bom" }
compose-ui = { group = "androidx.compose.ui", name = "ui" }
compose-material3 = { group = "androidx.compose.material3", name = "material3" }
compose-runtime-livedata = { group = "androidx.compose.runtime", name = "runtime-livedata" }
compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
constraintlayout-compose = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "constraintlayoutCompose" }
navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltNavigationCompose" }

# Dagger - Hilt
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }

# Architectural Components
lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidLifecycle" }
lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidLifecycle" }
lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidLifecycle" }
lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidLifecycle" }

# Coroutines
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-coroutines-play-services = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "coroutines" }

# Ktor Client Library
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }

# Room Library
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }

# Preferences DataStore
datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastorePreferences" }

# Firebase
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase-bom" }
firebase-analytics-ktx = { group = "com.google.firebase", name = "firebase-analytics-ktx" }
firebase-messaging-ktx = { group = "com.google.firebase", name = "firebase-messaging-ktx" }
firebase-crashlytics-ktx = { group = "com.google.firebase", name = "firebase-crashlytics-ktx" }
firebase-perf-ktx = { group = "com.google.firebase", name = "firebase-perf-ktx" }

# In-App Browser
browser = { module = "androidx.browser:browser", version.ref = "inAppBrowser" }

# Timber Library
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }

# Lottie Library
lottie-compose = { module = "com.airbnb.android:lottie-compose", version.ref = "lottieCompose" }

# Coil Library
coil-bom = { module = "io.coil-kt:coil-bom", version.ref = "coil-bom" }
coil-compose = { group = "io.coil-kt", name = "coil-compose" }
coil-svg = { group = "io.coil-kt", name = "coil-svg" }
coil-gif = { group = "io.coil-kt", name = "coil-gif" }

# Google Play In-App Reviews API
play-review-ktx = { module = "com.google.android.play:review-ktx", version.ref = "playReview" }

# Google Play In-App Updates API
play-app-update-ktx = { module = "com.google.android.play:app-update-ktx", version.ref = "playAppUpdate" }

# Test Libraries
truth = { module = "com.google.truth:truth", version.ref = "truth" }
junit = { module = "junit:junit", version.ref = "junit" }
test-ext-junit = { module = "androidx.test.ext:junit", version.ref = "testExtJunit" }
arch-core-testing = { module = "androidx.arch.core:core-testing", version.ref = "archCoreTesting" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
test-core = { module = "androidx.test:core", version.ref = "testCore" }
test-runner = { module = "androidx.test:runner", version.ref = "testRunner" }
test-rules = { module = "androidx.test:rules", version.ref = "testRules" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
room-testing = { module = "androidx.room:room-testing", version.ref = "room" }
hilt-android-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }

# UI Test Libraries
espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
espresso-intents = { module = "androidx.test.espresso:espresso-intents", version.ref = "espresso" }
compose-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
compose-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
room = { id = "androidx.room", version.ref = "room" }
google-services = { id = "com.google.gms.google-services", version.ref = "googleServices" }
firebase-crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "firebaseCrashlytics" }
firebase-perf = { id = "com.google.firebase.firebase-perf", version.ref = "firebasePerf" }